include:
  - project: nse/ci
    file:
      - /ci/lib/tox-bb5.yml
      - /ci/jobs/build-package.yml
      - /ci/jobs/publish-package.yml
      - /ci/jobs/docs.yml
      - /ci/jobs/publish-docs.yml
  - project: hpc/gitlab-upload-logs
    file: enable-upload.yml
  - project: cs/gitlabci-templates
    file: /build-image-using-buildah.yml

workflow:
  rules:
    - if: '$CI_EXTERNAL_PULL_REQUEST_IID'
    # re-define because the imported rules will be ignored
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: $CI_PIPELINE_SOURCE == "web"  # run for manually started pipelines from -/pipelines/new

variables:
  BLUECONFIGS_BRANCH:
    value: $BLUECONFIGS_BRANCH
    description: 'Name of the blueconfigs branch to test against'

python3-base:
  extends: .tox-template
  variables:
    TOXENV: flake8, py3

py38-full-spack:
  extends: .tox-template
  variables:
    TOXENV: bb5
    # modules need to be loaded in this certain order to avoid mixing of libraries
    EXTRA_MODULES:
      unstable:py-psutil
      unstable:intel-oneapi-compilers
      unstable:py-bluepy
      unstable:neurodamus-neocortex
      unstable:py-neurodamus  # needed for dependencies

set_alt_branches:
  script:
    - grep '^[[:alnum:]_]*_BRANCH=' <<< "$CI_COMMIT_MESSAGE" > branch_variables.env || touch branch_variables.env
    - . branch_variables.env
    - echo "BLUECONFIGS_PIPELINE_BRANCH=$BLUECONFIGS_BRANCH" >> branch_variables.env
    - cat branch_variables.env
  artifacts:
    reports:
      dotenv: branch_variables.env

blueconfig_tests:
  variables:
    bb5_build_dir: pipeline
    PY_NEURODAMUS_BRANCH: $CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME
    PARENT_COMMIT_MESSAGE: $CI_COMMIT_MESSAGE
  trigger:
    project: hpc/sim/blueconfigs
    branch: $BLUECONFIGS_PIPELINE_BRANCH
    strategy: depend
  needs:
    - set_alt_branches
  rules:
    - if: '$CI_EXTERNAL_PULL_REQUEST_IID'
      changes:
        - neurodamus/**/*
    - when: manual
      allow_failure: true

configure-docker-image:
  image: ubuntu:22.04
  script:
    - sudo apt-get update -y
    - sudo apt-get install -y git
    - |
      PACKAGE_VERSION=$(git describe --tags)
      REGISTRY_IMAGE_TAG=$(echo ${PACKAGE_VERSION%-*} | sed 's/-/.dev/')
    - |
      cat <<EOF > build.env
      REGISTRY_IMAGE_TAG=$REGISTRY_IMAGE_TAG
      EOF
    - cat build.env
  artifacts:
    when: always
    paths: [build.env]
    reports:
      dotenv: build.env

build-docker-image:
  timeout: 2h
  needs: [configure-docker-image]
  extends: .build-image-using-buildah
  variables:
    BUILD_PATH: $CI_PROJECT_DIR/docker
    KUBERNETES_CPU_LIMIT: 8
    KUBERNETES_CPU_REQUEST: 8
    KUBERNETES_MEMORY_LIMIT: 8Gi
    KUBERNETES_MEMORY_REQUEST: 8Gi
    BUILDAH_EXTRA_ARGS:
      --label org.opencontainers.image.title="neurodamus"
      --label org.opencontainers.image.version="$REGISTRY_IMAGE_TAG"
      --label org.opencontainers.image.revision="$CI_COMMIT_SHA"
      --label org.opencontainers.image.authors="$GITLAB_USER_NAME <$GITLAB_USER_EMAIL>"
      --label org.opencontainers.image.url="$CI_PROJECT_URL"
      --label org.opencontainers.image.source="$CI_PROJECT_URL"
      --label org.opencontainers.image.created="$CI_JOB_STARTED_AT"
      --label ch.epfl.bbpgitlab.ci-pipeline-url="$CI_PIPELINE_URL"
      --label ch.epfl.bbpgitlab.ci-commit-branch="$CI_COMMIT_BRANCH"
      --build-arg GITLAB_CI="$GITLAB_CI"
      --build-arg CI_JOB_TOKEN="$CI_JOB_TOKEN"

# The following stages are overrides. Don't rename
# Always add the manual option to create sdist/wheel or upload
build-package:
  rules:
    - when: on_success

publish-package:
  rules:
    - when: manual
      allow_failure: true

docs:
  variables:
    TOXENV: docs
  artifacts:
    paths:
      - docs/_build

publish-docs:
  variables:
    SYS_PACKAGES: openssh-clients
    PIP_PACKAGES: docs_internal_upload
  script:
    - docs-internal-upload --docs-path docs/_build
  rules:
    - when: manual
      allow_failure: true
