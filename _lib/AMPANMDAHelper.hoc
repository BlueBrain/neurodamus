/**
 * @file AMPANMDAHelper.hoc
 * @brief Encapsulate any hoc actions that are necessary to instantiate this synapse type
 * @author king
 * @date 2015-04-16
 * @remark Copyright Â© BBP/EPFL 2005-2015; All rights reserved. Do not distribute without further notice.
 */

{load_file("RNGSettings.hoc")}

/**
 * This helper object will encapsulate the hoc actions needed to create our typical excitatory synapse
 */
begintemplate AMPANMDAHelper

objref synapse, rng
public synapse

/**
 * @param tgid gid of Postsynaptic cell
 * @param synParameters set of paramters loaded from default nrn.h5
 * @param x location of the synapse along the section (0<=x<=1)
 * @param synapseID id assigned to this synapses within the cell's context
 * @param baseSeed for random number generator
 * @param spopid population id of the source (presyn). Used for seeding rng
 * @parap tpopid population id of the target (postsyn). Used for seed rng
 */
proc init() { local tgid, x, synapseID, baseSeed, seed2, spopid, tpopid  localobj synParams, rngInfo
    tgid = $1
    synParams = $o2
    x = $3
    synapseID = $4
    baseSeed = $5
    if (numarg()>=7) {
        spopid = $6
        tpopid = $7
    } else {
        spopid = 0
        tpopid = 1
    }

    synapse = new ProbAMPANMDA_EMS(x)
    synapse.tau_d_AMPA = synParams.DTC
    synapse.Use = abs( synParams.U )
    synapse.Dep = abs( synParams.D )
    synapse.Fac = abs( synParams.F )

    if( synParams.nrrp >= 0 ) {
        synapse.Nrrp = synParams.nrrp
    }

    // verify that only mask value if 1 (functional) or -1 (unset)
    if( !( synParams.maskValue == -1 || synParams.maskValue == 1 )) {
        print "Error synapse configuration. AMPA NMDA synapse should not have mask value: ", synParams.maskValue
        quit()
    }

    rngInfo = new RNGSettings()

    if( rngInfo.getRNGMode() == rngInfo.RANDOM123 ) {
        seed2 = spopid*65536 + tpopid + rngInfo.getSynapseSeed() + 300
        synapse.setRNG( tgid+250, synapseID+100, seed2 )
    } else {
        rng = new Random()
        if( rngInfo.getRNGMode() == rngInfo.COMPATIBILITY ) {
            rng.MCellRan4( synapseID*100000+100, tgid+250+baseSeed )
        } else if( rngInfo.getRNGMode() == rngInfo.UPMCELLRAN4 ) {
            rng.MCellRan4( synapseID*1000+100, spopid*16777216+tgid+250+baseSeed+rngInfo.getSynapseSeed() )
        }
        rng.uniform(0,1)
        synapse.setRNG( rng )
    }
    synapse.synapseID = synapseID
}

endtemplate AMPANMDAHelper

